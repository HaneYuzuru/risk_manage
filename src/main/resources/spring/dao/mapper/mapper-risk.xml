<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nju.risk.manage.dao.IRiskDAO">
    <resultMap id="BaseResultMap" type="com.nju.risk.manage.domain.RiskDO">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="possibility" property="possibility" jdbcType="INTEGER"/>
        <result column="impact" property="impact" jdbcType="INTEGER"/>
        <result column="trigger" property="trigger" jdbcType="VARCHAR"/>
        <result column="committer" property="committer" jdbcType="INTEGER"/>
        <result column="followers" property="followers" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="data_status" property="dataStatus" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,`name`,content,possibility,impact,`trigger`,committer,followers,gmt_create,gmt_modified,data_status
    </sql>

    <insert id="insert" parameterType="com.nju.risk.manage.domain.RiskDO">
        <selectKey order="AFTER" resultType="integer" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
        insert into `risk`(<include refid="Base_Column_List"/>)
        values(
        #{id,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR},
        #{content,jdbcType=VARCHAR},
        #{possibility,jdbcType=INTEGER},
        #{impact,jdbcType=INTEGER},
        #{trigger,jdbcType=VARCHAR},
        #{committer,jdbcType=INTEGER},
        #{followers,jdbcType=VARCHAR},
        now(),
        now(),
        #{dataStatus,jdbcType=INTEGER})
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        insert ignore into `risk` (<include refid="Base_Column_List"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id,jdbcType=INTEGER},
            #{item.name,jdbcType=VARCHAR},
            #{item.content,jdbcType=VARCHAR},
            #{item.possibility,jdbcType=INTEGER},
            #{item.impact,jdbcType=INTEGER},
            #{item.trigger,jdbcType=VARCHAR},
            #{item.committer,jdbcType=INTEGER},
            #{item.followers,jdbcType=VARCHAR},
            now(),
            now(),
            #{item.dataStatus,jdbcType=INTEGER})
        </foreach>
    </insert>

    <update id="update" parameterType="com.nju.risk.manage.domain.RiskDO">
        update `risk`
        <set>
            gmt_modified = now(),
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="possibility != null">
                possibility = #{possibility,jdbcType=INTEGER},
            </if>
            <if test="impact != null">
                impact = #{impact,jdbcType=INTEGER},
            </if>
            <if test="trigger != null">
                `trigger` = #{trigger,jdbcType=VARCHAR},
            </if>
            <if test="committer != null">
                committer = #{committer,jdbcType=INTEGER},
            </if>
            <if test="followers != null">
                followers = #{followers,jdbcType=VARCHAR},
            </if>
            <if test="dataStatus != null">
                data_status = #{dataStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="batchUpdate" parameterType="com.nju.risk.manage.domain.RiskDO">
        <foreach collection="list" item="item" open="" close="" index="index" separator=";">
            update `risk`
            <set>
                gmt_modified = now(),
                <if test="item.name != null">
                    `name` = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.content != null">
                    content = #{item.content,jdbcType=VARCHAR},
                </if>
                <if test="item.possibility != null">
                    possibility = #{item.possibility,jdbcType=INTEGER},
                </if>
                <if test="item.impact != null">
                    impact = #{item.impact,jdbcType=INTEGER},
                </if>
                <if test="item.trigger != null">
                    `trigger` = #{item.trigger,jdbcType=VARCHAR},
                </if>
                <if test="item.committer != null">
                    committer = #{item.committer,jdbcType=INTEGER},
                </if>
                <if test="item.followers != null">
                    followers = #{item.followers,jdbcType=VARCHAR},
                </if>
                <if test="item.dataStatus != null">
                    data_status = #{item.dataStatus,jdbcType=INTEGER},
                </if>
            </set>
            <where>
                id = #{item.id,jdbcType=INTEGER}
            </where>
        </foreach>
    </update>

    <update id="delete" parameterType="com.nju.risk.manage.domain.RiskDO">
        update `risk`
        <set>
            gmt_modified = now(),
            data_status = 1
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="batchDeleteByIdList" parameterType="java.util.List">
        update `risk`
        <set>
            gmt_modified = now(),
            data_status = 1
        </set>
        <where>
            id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item,jdbcType=INTEGER}
            </foreach>
        </where>
    </delete>

    <select id="selectByIdList" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from `risk`
        <where>
            id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item,jdbcType=INTEGER}
            </foreach>
        </where>
    </select>

    <select id="search" resultMap="BaseResultMap" parameterType="com.nju.risk.manage.domain.RiskQueryDO">
        select
        <include refid="Base_Column_List"/>
        from `risk`
        <choose>
            <when test="fuzzy==true">
                <where>
                    <if test="name!=null">
                        `name` LIKE '%${name}%'
                    </if>
                    <if test="content!=null">
                        `content` LIKE '%${content}%'
                    </if>
                    <if test="possibility!=-1">
                        `possibility` = #{possibility}
                    </if>
                    <if test="impact!=-1">
                        `impact` = #{impact}
                    </if>
                    <if test="trigger!=null">
                        `trigger` LIKE '%${trigger}%'
                    </if>
                </where>
            </when>
            <when test="fuzzy!=true">
                <where>
                    <if test="name!=null">
                        `name` = #{name}
                    </if>
                    <if test="content!=null">
                        `content` = #{content}
                    </if>
                    <if test="possibility!=-1">
                        `possibility` = #{possibility}
                    </if>
                    <if test="impact!=-1">
                        `impact` = #{impact}
                    </if>
                    <if test="trigger!=null">
                        `trigger` = #{trigger}
                    </if>
                </where>
            </when>
        </choose>
    </select>

    <select id="searchByCommitterIds" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from `risk`
        WHERE committer in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="searchByFollowerIds" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from `risk`
        WHERE committer in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="searchByTime" resultMap="BaseResultMap" parameterType="com.nju.risk.manage.domain.RiskQueryDO">
        select
        <include refid="Base_Column_List"/>
        from `risk`
        WHERE gmt_create BETWEEN #{start} AND #{end}
    </select>
</mapper>