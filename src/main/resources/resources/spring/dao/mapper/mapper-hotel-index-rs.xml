<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meituan.hotel.rs.index.dao.IHotelIndexRsDAO">
    <resultMap id="BaseResultMap" type="com.meituan.hotel.rs.index.domain.HotelIndexRsDO">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="poi_id" property="poiId" jdbcType="INTEGER"/>
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="rs_item_type" property="rsItemType" jdbcType="INTEGER"/>
        <result column="rs_item" property="rsItem" jdbcType="VARCHAR"/>
        <result column="rs_day" property="rsDay" jdbcType="INTEGER"/>
        <result column="fixed_rs" property="fixedRs" jdbcType="INTEGER"/>
        <result column="fixed_invalid_time" property="fixedInvalidTime" jdbcType="INTEGER"/>
        <result column="uncertain_rs" property="uncertainRs" jdbcType="INTEGER"/>
        <result column="uncertain_switch" property="uncertainSwitch" jdbcType="INTEGER"/>
        <result column="rs_switch" property="rsSwitch" jdbcType="INTEGER"/>
        <result column="goods_rs_switch" property="goodsRsSwitch" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="data_status" property="dataStatus" jdbcType="INTEGER"/>
        <result column="uncertain_latest_valid_time" property="uncertainLatestValidTime" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,poi_id,goods_id,city_id,rs_item_type,rs_item,rs_day,fixed_rs,fixed_invalid_time,uncertain_rs,uncertain_switch,rs_switch,goods_rs_switch,gmt_create,gmt_modified,data_status,uncertain_latest_valid_time
    </sql>

    <update id="update" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        update ${table}
        <set>
            gmt_modified = now(),
            <if test="data.id != null">
                id = #{data.id,jdbcType=INTEGER},
            </if>
            <if test="data.poiId != null">
                poi_id = #{data.poiId,jdbcType=INTEGER},
            </if>
            <if test="data.goodsId != null">
                goods_id = #{data.goodsId,jdbcType=INTEGER},
            </if>
            <if test="data.cityId != null">
                city_id = #{data.cityId,jdbcType=INTEGER},
            </if>
            <if test="data.rsItemType != null">
                rs_item_type = #{data.rsItemType,jdbcType=INTEGER},
            </if>
            <if test="data.rsItem != null">
                rs_item = #{data.rsItem,jdbcType=VARCHAR},
            </if>
            <if test="data.rsDay != null">
                rs_day = #{data.rsDay,jdbcType=INTEGER},
            </if>
            <if test="data.fixedRs != null">
                fixed_rs = #{data.fixedRs,jdbcType=INTEGER},
            </if>
            <if test="data.fixedInvalidTime != null">
                fixed_invalid_time = #{data.fixedInvalidTime,jdbcType=INTEGER},
            </if>
            <if test="data.uncertainRs != null">
                uncertain_rs = #{data.uncertainRs,jdbcType=INTEGER},
            </if>
            <if test="data.uncertainSwitch != null">
                uncertain_switch = #{data.uncertainSwitch,jdbcType=INTEGER},
            </if>
            <if test="data.rsSwitch != null">
                rs_switch = #{data.rsSwitch,jdbcType=INTEGER},
            </if>
            <if test="data.goodsRsSwitch != null">
                goods_rs_switch = #{data.goodsRsSwitch,jdbcType=INTEGER},
            </if>
            <if test="data.dataStatus != null">
                data_status = #{data.dataStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{data.id,jdbcType=INTEGER}
    </update>
    <update id="batchUpdate" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        <foreach collection="data" item="item" open="" close="" index="index" separator=";">
            update ${table}
            <set>
                gmt_modified = now(),
                fixed_rs = #{item.fixedRs,jdbcType=INTEGER},
                uncertain_rs = #{item.uncertainRs,jdbcType=INTEGER},
                uncertain_switch = #{item.uncertainSwitch,jdbcType=INTEGER},
                rs_switch = #{item.rsSwitch,jdbcType=INTEGER},
                goods_rs_switch = #{item.goodsRsSwitch,jdbcType=INTEGER},
                data_status = #{item.dataStatus,jdbcType=INTEGER}
            </set>
            <where>
                poi_id = #{item.poiId,jdbcType=INTEGER} and
                goods_id = #{item.goodsId,jdbcType=INTEGER} and
                city_id = #{item.cityId,jdbcType=INTEGER} and
                rs_item_type = #{item.rsItemType,jdbcType=INTEGER} and
                rs_item = #{item.rsItem,jdbcType=VARCHAR} and
                rs_day = #{item.rsDay,jdbcType=INTEGER}
            </where>
        </foreach>
    </update>

    <update id="updateUncertainLatestValidTimeByGoodsIds" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        <foreach collection="data" item="item" open="" close="" index="index" separator=";">
            update ${table}
            <set>
                gmt_modified = now(),
                uncertain_latest_valid_time = #{item.uncertainLatestValidTime,jdbcType=INTEGER}
            </set>
            <where>
                id = #{item.id,jdbcType=INTEGER}
            </where>
        </foreach>
    </update>

    <insert id="insert" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        <selectKey order="AFTER" resultType="long" keyProperty="data.id">
            select last_insert_id() as id
        </selectKey>
        insert into ${table}(<include refid="Base_Column_List"/>)
        values(
        #{data.id,jdbcType=INTEGER},
        #{data.poiId,jdbcType=INTEGER},
        #{data.goodsId,jdbcType=INTEGER},
        #{data.cityId,jdbcType=INTEGER},
        #{data.rsItemType,jdbcType=INTEGER},
        #{data.rsItem,jdbcType=VARCHAR},
        #{data.rsDay,jdbcType=INTEGER},
        #{data.fixedRs,jdbcType=INTEGER},
        #{data.fixedInvalidTime,jdbcType=INTEGER},
        #{data.uncertainRs,jdbcType=INTEGER},
        #{data.uncertainSwitch,jdbcType=INTEGER},
        #{data.rsSwitch,jdbcType=INTEGER},
        #{data.goodsRsSwitch,jdbcType=INTEGER},
        now(),
        now(),
        #{data.dataStatus,jdbcType=INTEGER},
        #{data.uncertainLatestValidTime,jdbcType=INTEGER} )
    </insert>
    <insert id="batchInsert" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        <foreach collection="data" item="item" open="" close="" index="index" separator=";">
            insert ignore into ${table} (<include refid="Base_Column_List"/>)
            values
            (
            #{item.id,jdbcType=INTEGER},
            #{item.poiId,jdbcType=INTEGER},
            #{item.goodsId,jdbcType=INTEGER},
            #{item.cityId,jdbcType=INTEGER},
            #{item.rsItemType,jdbcType=INTEGER},
            #{item.rsItem,jdbcType=VARCHAR},
            #{item.rsDay,jdbcType=INTEGER},
            #{item.fixedRs,jdbcType=INTEGER},
            #{item.fixedInvalidTime,jdbcType=INTEGER},
            #{item.uncertainRs,jdbcType=INTEGER},
            #{item.uncertainSwitch,jdbcType=INTEGER},
            #{item.rsSwitch,jdbcType=INTEGER},
            #{item.goodsRsSwitch,jdbcType=INTEGER},
            now(),
            now(),
            #{item.dataStatus,jdbcType=INTEGER},
            #{item.uncertainLatestValidTime,jdbcType=INTEGER} )
        </foreach>
    </insert>
    <delete id="delete" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        delete from ${table}
        where id = #{data.id,jdbcType=INTEGER}
    </delete>
    <delete id="batchDeleteByIdList" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        delete from ${table}
        <where>
            id in
            <foreach collection="data" open="(" close=")" separator="," item="item">
                #{item.id,jdbcType=INTEGER}
            </foreach>
        </where>
    </delete>
    <delete id="batchDeleteByGoodsIdList" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        delete from ${table}
        <where>
            goods_id in
            <foreach collection="data" open="(" close=")" separator="," item="item">
                #{item.goodsId,jdbcType=INTEGER}
            </foreach>
        </where>
    </delete>
    <select id="selectByPoiIdListAndDate" resultMap="BaseResultMap" parameterType="map">
        /*master*/ select
        <include refid="Base_Column_List"/>
        from ${table}
        <where>
            poi_id in
            <foreach collection="poiIdList" open="(" close=")" separator="," item="item">
                #{item,jdbcType=INTEGER}
            </foreach>
            and rs_day between #{startDate,jdbcType=INTEGER} and #{endDate,jdbcType=INTEGER}
        </where>
    </select>
    <select id="selectByGoodsIdListAndDate" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        /*master*/ select
        <include refid="Base_Column_List"/>
        from ${table}
        <where>
            goods_id in
            <foreach collection="data" open="(" close=")" separator="," item="item">
                #{item.goodsId,jdbcType=INTEGER}
            </foreach>
            and rs_day between #{data[0].startDate,jdbcType=INTEGER} and #{data[0].endDate,jdbcType=INTEGER}

        </where>
    </select>

    <select id="selectFixedInvalidTime" resultType="Integer"
            parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        /*master*/ select DISTINCT fixed_invalid_time
        from ${table}
        group by fixed_invalid_time order by fixed_invalid_time
    </select>

    <select id="selectFixedInvalidTimeByGoodsId" resultType="Integer"
            parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        /*master*/ select DISTINCT rs.fixed_invalid_time
        from ${table} rs
        <where>
            rs.goods_id in
            <foreach collection="data" open="(" close=")" separator="," item="goodsId">
                #{goodsId,jdbcType=INTEGER}
            </foreach>
        </where>
    </select>

    <select id="selectByGoodsIdList" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        /*master*/ select
        <include refid="Base_Column_List"/>
        from ${table}
        <where>
            goods_id in
            <foreach collection="data" open="(" close=")" separator="," item="goodsId">
                #{goodsId,jdbcType=INTEGER}
            </foreach>
        </where>
    </select>

    <select id="selectIdsByGoodsIds" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        /*master*/ select
        id,goods_id,uncertain_latest_valid_time
        from ${table}
        <where>
            goods_id in
            <foreach collection="data" open="(" close=")" separator="," item="item">
                #{item.goodsId,jdbcType=INTEGER}
            </foreach>
            and rs_day = #{data[0].rsDay}
        </where>
    </select>


    <select id="selectGoodsIdsAndPoiIdsByFixedInvalidTimeStartAndEnd" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.rs.index.param.TimesModel">
        /*master*/ select rs.id, rs.poi_id,rs.goods_id
        from ${table} rs
        <where>
            <![CDATA[rs.id >#{id} AND rs.rs_day = #{rsDay} AND rs.fixed_invalid_time >=  #{fixedInvalidTimesStart} AND rs.fixed_invalid_time <= #{fixedInvalidTimesEnd} ]]>
            order by rs.id asc limit #{pageSize}
        </where>
    </select>


    <select id="selectGoodsIdsAndPoiIdsByFixedInvalidTimeNotStartAndEnd" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.rs.index.param.TimesModel">
        /*master*/ select rs.id ,rs.poi_id,rs.goods_id
        from ${table} rs
        <where>
            <![CDATA[rs.id >#{id} AND rs.rs_day = #{rsDay} AND rs.fixed_invalid_time >  #{fixedInvalidTimesStart} AND rs.fixed_invalid_time <= #{fixedInvalidTimesEnd} ]]>
            order by rs.id asc limit #{pageSize}
        </where>
    </select>

    <select id="selectUncertainLatestValidTimeStartAndEnd" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.rs.index.param.TimesModel">
        /*master*/ select rs.id,rs.poi_id,rs.goods_id
        from ${table} rs
        <where>
            <![CDATA[rs.id >#{id} AND rs.rs_day = #{rsDay} AND rs.uncertain_latest_valid_time >=  #{uncertainLatestValidTimeStart} AND rs.uncertain_latest_valid_time <= #{uncertainLatestValidTimeEnd} ]]>
            order by rs.id asc limit #{pageSize}
        </where>
    </select>


    <select id="selectUncertainLatestValidTimeNotStartAndEnd" resultMap="BaseResultMap"
            parameterType="com.meituan.hotel.rs.index.param.TimesModel">
        /*master*/ select rs.id,rs.poi_id,rs.goods_id
        from ${table} rs
        <where>
            <![CDATA[rs.id >#{id} AND rs.rs_day = #{rsDay} AND rs.uncertain_latest_valid_time >  #{uncertainLatestValidTimeStart} AND rs.uncertain_latest_valid_time <= #{uncertainLatestValidTimeEnd} ]]>
            order by rs.id asc limit #{pageSize}
        </where>
    </select>

    <update id="updateFixedInvalidTime" parameterType="com.meituan.hotel.common.dkeeper.TableDataWrapper">
        <foreach collection="data" item="item" open="" close="" index="index" separator=";">
            update ${table}
            <set>
                gmt_modified = now(),
                fixed_invalid_time = #{item.fixedInvalidTime,jdbcType=INTEGER}
            </set>
            <where>
                goods_id = #{item.goodsId,jdbcType=INTEGER}
                and fixed_invalid_time &lt;&gt; #{item.fixedInvalidTime,jdbcType=INTEGER}
            </where>
        </foreach>
    </update>

</mapper>
